// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.IoT.DeviceUpdate.Models
{
    public partial class Device
    {
        internal static Device DeserializeDevice(JsonElement element)
        {
            string deviceId = default;
            Optional<string> moduleId = default;
            string deviceClassId = default;
            string manufacturer = default;
            string model = default;
            Optional<string> groupId = default;
            Optional<UpdateId> lastAttemptedUpdateId = default;
            Optional<DeviceDeploymentState> deploymentStatus = default;
            Optional<UpdateId> installedUpdateId = default;
            bool onLatestUpdate = default;
            Optional<string> lastDeploymentId = default;
            Optional<InstallResult> lastInstallResult = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceId"))
                {
                    deviceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("moduleId"))
                {
                    moduleId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceClassId"))
                {
                    deviceClassId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("manufacturer"))
                {
                    manufacturer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("model"))
                {
                    model = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("groupId"))
                {
                    groupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastAttemptedUpdateId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastAttemptedUpdateId = null;
                        continue;
                    }
                    lastAttemptedUpdateId = UpdateId.DeserializeUpdateId(property.Value);
                    continue;
                }
                if (property.NameEquals("deploymentStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deploymentStatus = new DeviceDeploymentState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("installedUpdateId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        installedUpdateId = null;
                        continue;
                    }
                    installedUpdateId = UpdateId.DeserializeUpdateId(property.Value);
                    continue;
                }
                if (property.NameEquals("onLatestUpdate"))
                {
                    onLatestUpdate = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("lastDeploymentId"))
                {
                    lastDeploymentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastInstallResult"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastInstallResult = null;
                        continue;
                    }
                    lastInstallResult = InstallResult.DeserializeInstallResult(property.Value);
                    continue;
                }
            }
            return new Device(deviceId, moduleId.Value, deviceClassId, manufacturer, model, groupId.Value, lastAttemptedUpdateId.Value, Optional.ToNullable(deploymentStatus), installedUpdateId.Value, onLatestUpdate, lastDeploymentId.Value, lastInstallResult.Value);
        }
    }
}
