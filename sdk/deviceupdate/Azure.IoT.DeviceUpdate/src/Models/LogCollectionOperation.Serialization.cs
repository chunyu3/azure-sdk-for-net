// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.IoT.DeviceUpdate.Models
{
    public partial class LogCollectionOperation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(OperationId))
            {
                writer.WritePropertyName("operationId");
                writer.WriteStringValue(OperationId);
            }
            writer.WritePropertyName("deviceList");
            writer.WriteStartArray();
            foreach (var item in DeviceList)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WriteEndObject();
        }

        internal static LogCollectionOperation DeserializeLogCollectionOperation(JsonElement element)
        {
            Optional<string> operationId = default;
            IList<DeviceUpdateAgentId> deviceList = default;
            Optional<string> description = default;
            Optional<string> createdDateTime = default;
            Optional<string> lastActionDateTime = default;
            Optional<OperationStatus> status = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("operationId"))
                {
                    operationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceList"))
                {
                    List<DeviceUpdateAgentId> array = new List<DeviceUpdateAgentId>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DeviceUpdateAgentId.DeserializeDeviceUpdateAgentId(item));
                    }
                    deviceList = array;
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdDateTime"))
                {
                    createdDateTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastActionDateTime"))
                {
                    lastActionDateTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new OperationStatus(property.Value.GetString());
                    continue;
                }
            }
            return new LogCollectionOperation(operationId.Value, deviceList, description.Value, createdDateTime.Value, lastActionDateTime.Value, Optional.ToNullable(status));
        }
    }
}
